{
  "version": 3,
  "sources": ["../../../../../packages/ui/src/contentlayer.config.js", "../../../contentlayer.config.ts"],
  "sourcesContent": ["import { defineDocumentType } from \"contentlayer2/source-files\";\nimport remarkGfm from \"remark-gfm\";\nimport rehypeSlug from \"rehype-slug\";\nimport rehypePrettyCode from \"rehype-pretty-code\";\nimport rehypeAutolinkHeadings from \"rehype-autolink-headings\";\n\nconst computedFields = {\n  slug: {\n    type: \"string\",\n    resolve: (doc) => `/${doc._raw.flattenedPath}`,\n  },\n  slugAsParams: {\n    type: \"string\",\n    resolve: (doc) => doc._raw.flattenedPath.split(\"/\").slice(1).join(\"/\"),\n  },\n  headings: {\n    type: \"list\",\n    of: { type: \"string\" },\n    resolve: (doc) => {\n      const content = doc.body.raw;\n\n      const headingMatches = [];\n      const lines = content.split(\"\\n\");\n      let inCodeBlock = false;\n\n      // Simple slugify function\n      const slugify = (text) => {\n        return text\n          .toLowerCase()\n          .trim()\n          .replace(/[\\s+]/g, \"-\")\n          .replace(/[^\\w\\-]+/g, \"\");\n      };\n\n      lines.forEach((line) => {\n        if (line.trim().startsWith(\"```\")) {\n          inCodeBlock = !inCodeBlock;\n        }\n\n        if (!inCodeBlock) {\n          const match = line.match(/^(#{1,3})\\s(.+)$/);\n          if (match) {\n            const [_, hashes, text] = match;\n            const id = slugify(text);\n            headingMatches.push({\n              level: hashes.length,\n              text,\n              id,\n            });\n          }\n        }\n      });\n\n      return headingMatches;\n    },\n  },\n};\n\nexport const Docs = defineDocumentType(() => ({\n  name: \"Docs\",\n  filePathPattern: \"**/*.mdx\",\n  contentType: \"mdx\",\n  fields: {\n    title: {\n      type: \"string\",\n      required: true,\n    },\n    description: {\n      type: \"string\",\n      required: true,\n    },\n    date: {\n      type: \"date\",\n      required: true,\n    },\n  },\n  computedFields,\n}));\n\nexport const mdxOptions = {\n  remarkPlugins: [remarkGfm],\n  rehypePlugins: [\n    rehypeSlug,\n    [\n      rehypePrettyCode,\n      {\n        theme: { light: \"github-light-default\", dark: \"github-dark-dimmed\" },\n        keepBackground: false,\n      },\n    ],\n    [\n      rehypeAutolinkHeadings,\n      {\n        behavior: \"wrap\",\n        content: (node) => node.children,\n        properties: {\n          className: [\"subheading-anchor\"],\n          ariaLabel: \"Link to section\",\n        },\n      },\n    ],\n  ],\n};\n", "import { Docs, mdxOptions } from \"@workspace/ui/contentlayer.config\";\nimport { makeSource } from \"contentlayer2/source-files\";\n\nexport default makeSource({\n  contentDirPath: \"./docs\",\n  documentTypes: [Docs],\n  mdx: { ...mdxOptions },\n});\n"],
  "mappings": ";AAAA,SAAS,0BAA0B;AACnC,OAAO,eAAe;AACtB,OAAO,gBAAgB;AACvB,OAAO,sBAAsB;AAC7B,OAAO,4BAA4B;AAEnC,IAAM,iBAAiB;AAAA,EACrB,MAAM;AAAA,IACJ,MAAM;AAAA,IACN,SAAS,CAAC,QAAQ,IAAI,IAAI,KAAK,aAAa;AAAA,EAC9C;AAAA,EACA,cAAc;AAAA,IACZ,MAAM;AAAA,IACN,SAAS,CAAC,QAAQ,IAAI,KAAK,cAAc,MAAM,GAAG,EAAE,MAAM,CAAC,EAAE,KAAK,GAAG;AAAA,EACvE;AAAA,EACA,UAAU;AAAA,IACR,MAAM;AAAA,IACN,IAAI,EAAE,MAAM,SAAS;AAAA,IACrB,SAAS,CAAC,QAAQ;AAChB,YAAM,UAAU,IAAI,KAAK;AAEzB,YAAM,iBAAiB,CAAC;AACxB,YAAM,QAAQ,QAAQ,MAAM,IAAI;AAChC,UAAI,cAAc;AAGlB,YAAM,UAAU,CAAC,SAAS;AACxB,eAAO,KACJ,YAAY,EACZ,KAAK,EACL,QAAQ,UAAU,GAAG,EACrB,QAAQ,aAAa,EAAE;AAAA,MAC5B;AAEA,YAAM,QAAQ,CAAC,SAAS;AACtB,YAAI,KAAK,KAAK,EAAE,WAAW,KAAK,GAAG;AACjC,wBAAc,CAAC;AAAA,QACjB;AAEA,YAAI,CAAC,aAAa;AAChB,gBAAM,QAAQ,KAAK,MAAM,kBAAkB;AAC3C,cAAI,OAAO;AACT,kBAAM,CAAC,GAAG,QAAQ,IAAI,IAAI;AAC1B,kBAAM,KAAK,QAAQ,IAAI;AACvB,2BAAe,KAAK;AAAA,cAClB,OAAO,OAAO;AAAA,cACd;AAAA,cACA;AAAA,YACF,CAAC;AAAA,UACH;AAAA,QACF;AAAA,MACF,CAAC;AAED,aAAO;AAAA,IACT;AAAA,EACF;AACF;AAEO,IAAM,OAAO,mBAAmB,OAAO;AAAA,EAC5C,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO;AAAA,MACL,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,aAAa;AAAA,MACX,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,EACF;AAAA,EACA;AACF,EAAE;AAEK,IAAM,aAAa;AAAA,EACxB,eAAe,CAAC,SAAS;AAAA,EACzB,eAAe;AAAA,IACb;AAAA,IACA;AAAA,MACE;AAAA,MACA;AAAA,QACE,OAAO,EAAE,OAAO,wBAAwB,MAAM,qBAAqB;AAAA,QACnE,gBAAgB;AAAA,MAClB;AAAA,IACF;AAAA,IACA;AAAA,MACE;AAAA,MACA;AAAA,QACE,UAAU;AAAA,QACV,SAAS,CAAC,SAAS,KAAK;AAAA,QACxB,YAAY;AAAA,UACV,WAAW,CAAC,mBAAmB;AAAA,UAC/B,WAAW;AAAA,QACb;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF;;;ACrGA,SAAS,kBAAkB;AAE3B,IAAO,8BAAQ,WAAW;AAAA,EACxB,gBAAgB;AAAA,EAChB,eAAe,CAAC,IAAI;AAAA,EACpB,KAAK,EAAE,GAAG,WAAW;AACvB,CAAC;",
  "names": []
}
